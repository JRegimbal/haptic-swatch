import numpy as np

class LinearGammaCrediter:
    k: float
    theta: float
    delay: float
    def __init__(self, ndims) -> None: ...
    def add_index(self, feature_vec) -> None: ...
    def credit(self): ...

class GammaCrediter:
    k: float
    theta: float
    delay: float
    def __init__(self, ndims) -> None: ...
    def add_index(self, feature_vec) -> None: ...
    def credit(self): ...
    def credit2(self): ...

class UniformCrediter:
    def __init__(self, ndims: int) -> None: ...
    def add_index(self, feature_vec: np.ndarray): ...
    def credit(self) -> tuple[np.ndarray, np.ndarray]: ...
    def credit2(self) -> tuple[np.ndarray, np.ndarray, np.ndarray]: ...
    def credit3(self) -> tuple[np.ndarray, np.ndarray, np.ndarray]: ...
